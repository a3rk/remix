## REMIX CI CONFIG ##

language: cpp
sudo: required
dist: trusty

os: linux

branches:
  except:
  - experimental

addons:
  apt:
    update: true
    sources:
      - sourceline: 'ppa:mhier/libboost-latest'
    packages:
      - boost1.67

matrix:  
  include:
    # works on Precise and Trusty
    - name: Remix Suite - g++5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
         - COMPILE=main
    
    # works on Precise and Trusty
    - name: Remix Suite - g++6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - COMPILE=main
    # works on Precise and Trusty
    - name: Remix Suite - g++7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COMPILE=main

  allow_failures:
    # works on Precise and Trusty
    - name: Remix Suite - g++5 with Tests
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
         - COMPILE=tests

    # works on Precise and Trusty
    - name: Remix Suite - g++6 with Tests
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - COMPILE=tests

    # works on Precise and Trusty
    - name: Remix Suite - g++7 with Tests
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COMPILE=tests

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:mhier/libboost-latest
  - sudo apt-get purge --auto-remove cmake
  - sudo apt-get update -qq

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
      export NUMBER_OF_CPUS="$(grep -c '^processor' /proc/cpuinfo)";
    elif [ "$TRAVIS_OS_NAME" == "osx" ] ; then
      export NUMBER_OF_CPUS="$(sysctl -n hw.logicalcpu_max)";
    fi
  - if [ $TRAVIS_OS_NAME = linux ] ; then
      sudo add-apt-repository ppa:ondrej/php -y;
      sudo add-apt-repository ppa:mhier/libboost-latest -y;
      sudo apt-get update;
      sudo apt-get install -y boost1.67;
    fi
  - sudo apt-get install -qq build-essential
  - sudo apt-get install -qq cmake
  - sudo apt-get install -qq pkg-config
  - sudo apt-get install -qq libssl-dev
  - sudo apt-get install -qq libzmq3-dev
  - sudo apt-get install -qq libunbound-dev
  - sudo apt-get install -qq libminiupnpc-dev
  - sudo apt-get install -qq libunwind8-dev
  - sudo apt-get install -qq liblzma-dev
  - sudo apt-get install -qq libreadline-dev
  - sudo apt-get install -qq libldns-dev
  - sudo apt-get install -qq libexpat1-dev
  - sudo apt-get install -qq libgtest-dev
  - sudo apt-get install -qq doxygen
  - sudo apt-get install -qq graphviz

script:
  - eval "${MATRIX_EVAL}"
  - cd $TRAVIS_BUILD_DIR
  - |
    if [ "${COMPILE}" == "main" ]; then
      make -j $NUMBER_OF_CPUS
    elif [ "${COMPILE}" == "tests" ]; then
      make release-test -j $NUMBER_OF_CPUS
    else
      echo not supported compile option $COMPILE
      exit 1
    fi
  
after_install:
  - HAVE_DOT=YES doxygen Doxyfile

